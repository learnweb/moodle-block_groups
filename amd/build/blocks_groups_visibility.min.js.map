{"version":3,"file":"blocks_groups_visibility.min.js","sources":["../src/blocks_groups_visibility.js"],"sourcesContent":["// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * Javascript module for block_groups\n *\n * @module     block_groups\n * @copyright  2016/17 N Herrmann\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/url', 'core/notification', 'core/str'], function($, ajax, url, notification, str) {\n    /**\n     * Methode to remove warnings\n     * @param {(Number|String)} identifier\n     */\n    var removeWarning = function(identifier) {\n        $('.block_groups').find('.warning' + identifier).remove();\n    };\n    /**\n     * Removes the Spinner Class of a single group.\n     * @param {Number} groupid that identifies to which group the spinner belongs to.\n     */\n    var removeSpinner = function(groupid) {\n        var divgroup = $('.block_groups');\n        divgroup.find('.spinner' + groupid).remove();\n        divgroup.find('.imggroup-' + groupid).show();\n    };\n    /**\n     * Removes all spinners.\n     */\n    var removeSpinners = function() {\n        var divgroups = $('.block_groups');\n        divgroups.find('.spinner-all').remove();\n        divgroups.find('.imggroup').show();\n    };\n    /**\n     * Reloads the current page.\n     */\n    var reloadPage = function() {\n        location.reload(true);\n    };\n    /**\n     * Creates a warning message.\n     */\n    var createWarningMessage = function() {\n\n        str.get_strings([\n            {'key': 'errortitle', component: 'block_groups'},\n            {'key': 'nochangeindatabasepossiblereload', component: 'block_groups'},\n            {'key': 'yes'},\n            {'key': 'no'}\n        ]).done(function(s) {\n            notification.confirm(s[0], s[1], s[2], s[3], reloadPage);\n        }).fail(notification.exception);\n    };\n    /**\n     * Initialises Spinner for a single group.\n     * @param {Number} groupid\n     */\n    var addSpinner = function(groupid) {\n        var divgroups = $('.block_groups');\n        if (divgroups.find('.warning' + groupid).length > 0) {\n\n            removeWarning(groupid);\n        }\n        var imgurl = url.imageUrl(\"i/loading_small\", 'moodle');\n        var spinner = document.createElement(\"img\");\n        spinner.className = 'spinner' + groupid + ' spinner block-groups-spinner';\n        spinner.src = imgurl;\n        spinner.hidden = false;\n\n        divgroups.find('.imggroup-' + groupid).before(spinner);\n        divgroups.find('.imggroup-' + groupid).hide();\n    };\n    /**\n     * Adds a warning(triangle with exclamation mark) in case the response is empty or the response throws an error.\n     * @param {(Number|String)} identifier\n     * @returns {Boolean} false\n     */\n    var addWarning = function(identifier) {\n        var divgroups = $('.block_groups');\n        var warningexist = divgroups.find('.warning' + identifier);\n        if (warningexist.length) {\n            removeSpinner(identifier);\n            return false;\n        } else {\n            if (identifier === 'all') {\n                removeSpinners();\n            } else {\n                removeSpinner(identifier);\n            }\n            var imgurl = url.imageUrl(\"i/warning\", 'moodle');\n            var warning = document.createElement(\"img\");\n            warning.className = 'warning' + identifier + ' block-groups-warning';\n            warning.src = imgurl;\n            createWarningMessage();\n            (divgroups.find('.imggroup-' + identifier).before(warning));\n            divgroups.find('.imggroup-' + identifier).on('click', createWarningMessage);\n            divgroups.find('.warning' + identifier).on('click', createWarningMessage);\n        }\n        return false;\n    };\n    /**\n     * Method that calls for an ajax script and replaces and/or changes the output components for a single group.\n     * @param {*} event\n     * @return {Boolean}\n     */\n    var changevisibility = function(event) {\n        var divgroups = $('.block_groups');\n\n        var groupid = $(this).data('groupid');\n        if (divgroups.find('.spinner' + $(this).data('groupid')).length > 0 ||\n            divgroups.find('.spinner-all').length > 0) {\n            return false;\n        }\n        addSpinner($(this).data('groupid'));\n        var promises = ajax.call([\n\n            {\n                methodname: 'block_groups_create_output', args: {\n                    groups: {\n                        id: $(this).data('groupid'),\n                        courseid: event.data.courseid\n                    }\n\n                }\n            }\n        ]);\n        $(document).ajaxError(function() {\n            addWarning(groupid);\n            return false;\n        });\n\n        promises[0].then(function(response) {\n            if (response === null || response.error === true) {\n                addWarning(groupid);\n                return false;\n            }\n            divgroups.find('.group-' + response.id).replaceWith(response.newelement);\n            // Replaces the used element, therefore removes the spinner.\n            if (response.visibility === 0) {\n                divgroups.find('.membergroup-' + response.id).removeClass('hiddengroups');\n            }\n            if (response.visibility === 1) {\n                divgroups.find('.membergroup-' + response.id).addClass('hiddengroups');\n            }\n            divgroups.find('.group-' + response.id + ' .block_groups_toggle').on('click',\n                {courseid: event.data.courseid}, changevisibility);\n            removeSpinner(response.id);\n            return false;\n        }).fail(function() {\n            addWarning(groupid);\n            return false;\n        });\n        return false;\n    };\n    var checkMember = function(response) {\n        var membergroup = $('.block-groups-membergroup');\n        var visibility = response.visibility;\n        if (visibility === 2) {\n            membergroup.removeClass('hiddengroups');\n        }\n        if (visibility === 1) {\n            membergroup.addClass('hiddengroups');\n        }\n    };\n    /**\n     * Initialises spinners for all groups.\n     */\n    var addSpinners = function() {\n        var divgroups = $('.block_groups');\n        if (divgroups.find('.warningall').length > 0) {\n            removeWarning('all');\n        }\n        var imgurl = url.imageUrl(\"i/loading_small\", 'moodle');\n        var spinner = document.createElement(\"img\");\n        spinner.className = 'spinner-all spinner block-groups-spinner';\n        spinner.src = imgurl;\n        spinner.hidden = false;\n        divgroups.find('.imggroup').before(spinner);\n        divgroups.find('.imggroup').hide();\n    };\n\n    var addNotification = function(type, text) {\n        notification.addNotification({\n            message: text,\n            type: type\n        });\n    };\n    /**\n     * Method that calls for an ajax script and replaces and/or changes the output components for all groups.\n     * @param {Number} event\n     * @return {Boolean}\n     */\n    var changeVisibilityAll = function(event) {\n        if ($('.block_groups').find('.spinner').length > 0) {\n            return false;\n        }\n        var warningexist = $('.block_groups').find('.block-groups-warning');\n        if (typeof warningexist !== 'undefined' && warningexist.length > 0) {\n            addWarning('all');\n            return false;\n        }\n        addSpinners();\n        // Calls for the externallib.\n        var promises = ajax.call([\n            {\n                methodname: 'block_groups_create_allgroups_output', args: {\n                    groups: {\n                        action: $(this).data('action'),\n                        courseid: event.data.courseid\n                    }\n                }\n            }\n        ]);\n        $(document).ajaxError(function() {\n            addWarning('all');\n            return false;\n        });\n        // Response is processed.\n        promises[0].then(function(response) {\n            var divgroups = $('.block_groups');\n            // Catch misleading responses.\n            if (response === null || response.error === true) {\n                addWarning('all');\n                return false;\n            }\n            if (response.visibility === 0) {\n                // Is nearly impossible since group has to be deleted during the request, however it is\n                // possible, therefore a special message is thrown.\n                divgroups.find('.content').replaceWith(response.newelement);\n                str.get_strings([\n                    {key: 'nogroups', component: 'block_groups'}\n                ]).done(function(s) {\n                    addNotification('error', s[0]);\n                }).fail(notification.exception);\n                return false;\n            }\n\n            // Old Elements are replaced and on click event added.\n            divgroups.find('.wrapperlistgroup').replaceWith(response.newelement);\n            divgroups.find('.block_groups_toggle').on('click', {courseid: event.data.courseid}, changevisibility);\n            checkMember(response);\n            // Outputvisibility 0->nogroups 1 -> hidden 2->visible 3-> all are hidden 4-> all are visible.\n            str.get_strings([\n                {key: 'groupschangedhidden', component: 'block_groups'},\n                {key: 'groupschangedvisible', component: 'block_groups'},\n                {key: 'allgroupsinstatehidden', component: 'block_groups'},\n                {key: 'allgroupsinstatevisible', component: 'block_groups'}\n            ]).done(function(s) {\n                switch (response.visibility) {\n                    case 1:\n                        addNotification('success', s[0]);\n                        break;\n                    case 2:\n                        addNotification('success', s[1]);\n                        break;\n                    case 3:\n                        addNotification('warning', s[2]);\n                        break;\n                    case 4:\n                        addNotification('warning', s[3]);\n                        break;\n                    default:\n                        break;\n                }\n            }).fail(notification.exception);\n            return false;\n        }).fail(function() {\n            addWarning('all');\n            return false;\n        });\n        removeSpinners();\n        return false;\n    };\n\n    /**\n     * Calls for the main method. Either single groups are changed with block_groups_toggle or all groups with\n     * block_groups_all_toggle.\n     * @param {Number} courseid\n     */\n    return {\n        initialise: function(courseid) {\n            $('.block_groups_toggle').on('click', {courseid: courseid}, changevisibility);\n            $('.block_groups_all_toggle').on('click', {courseid: courseid}, changeVisibilityAll);\n\n        }\n    };\n});\n"],"names":["define","$","ajax","url","notification","str","removeWarning","identifier","find","remove","removeSpinner","groupid","divgroup","show","removeSpinners","divgroups","reloadPage","location","reload","createWarningMessage","get_strings","component","done","s","confirm","fail","exception","addWarning","length","imgurl","imageUrl","warning","document","createElement","className","src","before","on","changevisibility","event","this","data","spinner","hidden","hide","addSpinner","promises","call","methodname","args","groups","id","courseid","ajaxError","then","response","error","replaceWith","newelement","visibility","removeClass","addClass","addNotification","type","text","message","changeVisibilityAll","warningexist","addSpinners","action","key","membergroup","checkMember","initialise"],"mappings":"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"}